%YAML 1.1
---

project: massive-analysis
rules:
    comm:
      description: Displays available topics
      name: Available topics

      query: >-
        return
          'topicNames': <topics/name>,
          'publishers': <nodes/publishers/topic_name>,
          'subscribers': <nodes/subscribers/topic_name>,

          'serviceNames': <services/name>,
          'servers': <nodes/servers/topic_name>,
          'clients': <nodes/clients/topic_name>

      scope: configuration
      tags:
          - ros-comm
          - custom-filter-tag

    match_topics:
        description: All subscribd topics must be advertised as well
        name: Used topics must be defined

        query: >-
          for use in <nodes/subscribers/topic_name>
          where use not in <nodes/publishers/topic_name>
          return use

        scope: configuration
        tags:
            - match
            - topics

    advertise_info:
        description: Information about calls to advertise
        name: Advertise info

        query: >-
          for def in <nodes/publishers>
          where def.topic_name in <nodes/subscribers/topic_name>
          return
            def.source_location, def.topic.name, def.topic_name

        scope: configuration
        tags:
          - info
          - topics

    topic_launch_info:
        description: Information about publishers launch files
        name: Launch info

        query: >-
          for def in <nodes/publishers>
          let node = def.node
          let launch = node.launch
          where def.topic_name in <nodes/subscribers/topic_name>
          return
            node.name, launch

        scope: configuration
        tags:
          - info
          - topics

    subscribe_info:
        description: Information about calls to subscribe
        name: subscribe info

        query: >-
          for use in <nodes/subscribers>
          where use.topic_name in <nodes/publishers/topic_name>
          return
            use.source_location, use.topic.name, use.topic_name

        scope: configuration
        tags:
          - info
          - topics

    match_services:
        description: All subscribd services must be defined as well
        name: Used services must be defined

        query: >-
          for use in <nodes/clients/topic_name>
          where use not in <nodes/servers/topic_name>
          return use

        scope: configuration
        tags:
          - match
          - services

    service_info:
        description: Information about services definitions
        name: Services info

        query: >-
          for def in <nodes/servers>
          where def.topic_name in <nodes/clients/topic_name>
          return
            def.source_location, def.service.name, def.topic_name

        scope: configuration
        tags:
          - info
          - services

    service_launch_info:
        description: Information about servers launch files
        name: Launch info

        query: >-
          for def in <nodes/servers>
          let node = def.node
          let launch = node.launch
          where def.topic_name in <nodes/clients/topic_name>
          return
            node.name, launch

        scope: configuration
        tags:
          - info
          - services

    client_info:
        description: Information about calls to subscribe
        name: subscribe info

        query: >-
          for use in <nodes/clients>
          where use.topic_name in <nodes/servers/topic_name>
          return
            use.source_location, use.service.name, use.topic_name

        scope: configuration
        tags:
          - info
          - services
